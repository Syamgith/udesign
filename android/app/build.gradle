def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.ar.sceneform.plugin'

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.udesign"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation platform('com.google.firebase:firebase-bom:28.2.1')
    implementation 'com.google.firebase:firebase-analytics'
}
// sceneform.asset('sampledata/Wal_Clok/fox_face.fbx',
//         'sampledata/fox_face_material.mat',
//         'sampledata/fox_face.sfa',
//         'src/main/assets/fox_face')

sceneform.asset('sampledata/scaniverse-20210703-120826.obj',
        'default',
        'sampledata/scaniverse-20210703-120826.sfa',
        'src/main/assets/couch')

sceneform.asset('sampledata/tredmill/Treadmill OBJ.obj',
        'default',
        'sampledata/tredmill/Treadmill OBJ.sfa',
        'src/main/assets/tredmill')

sceneform.asset('sampledata/sofa/sofa.obj',
        'default',
        'sampledata/sofa/sofa.sfa',
        'src/main/assets/sofa')

sceneform.asset('sampledata/potted_plant/potted_plant_obj.obj',
        'default',
        'sampledata/potted_plant/potted_plant_obj.sfa',
        'src/main/assets/potted_plant')
sceneform.asset('sampledata/piano/Piano.obj',
        'default',
        'sampledata/piano/Piano.sfa',
        'src/main/assets/piano')

sceneform.asset('sampledata/ceiling_fan/Ceiling Fan.obj',
        'default',
        'sampledata/ceiling_fan/Ceiling Fan.sfa',
        'src/main/assets/ceiling_fan')

sceneform.asset('sampledata/a_light/eb_sconce_light_01.obj',
        'default',
        'sampledata/a_light/eb_sconce_light_01.sfa',
        'src/main/assets/light')

sceneform.asset('sampledata/a_lamb/eb_lamp_01.obj',
        'default',
        'sampledata/a_lamb/eb_lamp_01.sfa',
        'src/main/assets/lamp3')
